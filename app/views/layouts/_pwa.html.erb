<link rel="manifest" href="/manifest.json">
<!-- PWA meta tags for iOS -->  
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">
<meta name="apple-mobile-web-app-title" content="Ride Flow">

<!-- Service Worker registration -->  
<script>
  if ('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
      navigator.serviceWorker.register('/service-worker.js')
        .then(registration => {
          console.log('ServiceWorker registration successful');
        })
        .catch(err => {
          console.log('ServiceWorker registration failed: ', err);
        });
    });
  }
  
  // PWA Install Prompt for mobile
  let deferredPrompt;
  const installBanner = document.createElement('div');
  
  window.addEventListener('beforeinstallprompt', (e) => {
    // Prevent the mini-infobar from appearing on mobile
    e.preventDefault();
    // Stash the event so it can be triggered later
    deferredPrompt = e;
    // Check if user is on mobile
    if (/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)) {
      // Create install banner
      installBanner.innerHTML = `
        <div id="pwa-install-banner" style="position: fixed; bottom: 0; left: 0; right: 0; background-color: white; padding: 12px; display: flex; justify-content: space-between; align-items: center; box-shadow: 0 -2px 10px rgba(0,0,0,0.1); z-index: 1000;">
          <div style="display: flex; align-items: center;">
            <img src="/icon.png" style="width: 40px; height: 40px; margin-right: 12px;" alt="Ride Flow">
            <div>
              <strong>Ride Flow</strong>
              <p style="margin: 0; font-size: 14px;">Install this app on your device</p>
            </div>
          </div>
          <button id="pwa-install-btn" style="background-color: #000; color: white; border: none; padding: 8px 16px; border-radius: 4px; font-weight: 500;">Install</button>
          <button id="pwa-close-btn" style="background: none; border: none; padding: 8px; font-size: 16px;">Ã—</button>
        </div>
      `;
      
      // Add banner to body after page load
      window.addEventListener('DOMContentLoaded', () => {
        document.body.appendChild(installBanner);
        
        // Add event listeners to buttons
        document.getElementById('pwa-install-btn').addEventListener('click', async () => {
          if (deferredPrompt) {
            deferredPrompt.prompt();
            const { outcome } = await deferredPrompt.userChoice;
            console.log(`User response: ${outcome}`);
            deferredPrompt = null;
            installBanner.style.display = 'none';
          }
        });
        
        document.getElementById('pwa-close-btn').addEventListener('click', () => {
          installBanner.style.display = 'none';
          // Store in session that user closed the banner
          localStorage.setItem('pwaInstallBannerClosed', Date.now());
        });
        
        // Check if user has recently closed the banner
        const lastClosed = localStorage.getItem('pwaInstallBannerClosed');
        if (lastClosed && Date.now() - parseInt(lastClosed) < 86400000) { // 24 hours
          installBanner.style.display = 'none';
        }
      });
    }
  });
  
  // Clear installation prompt when installed
  window.addEventListener('appinstalled', () => {
    deferredPrompt = null;
    installBanner.style.display = 'none';
    console.log('PWA was installed');
  });
</script>